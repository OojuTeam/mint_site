<% @setup = {
  title: 'Deploy Smart Contract',
  description: 'Confirm smart contract details.'
}
%>

<%= render partial: "shared/heading", locals: { title: '스마트 컨트랙트 Deploy', description: '' } %>

<div class="flex mx-auto w-96">
  <div class="w-full">
    <p class='block w-full border-0 p-0 text-gray-900 placeholder-gray-500 focus:ring-0 sm:text-sm'>제목: <%= @smart_contract.name %></p>
    <p class='block w-full border-0 p-0 text-gray-900 placeholder-gray-500 focus:ring-0 sm:text-sm'>Symbol: <%= @smart_contract.symbol %></p>
    <p class='block w-full border-0 p-0 text-gray-900 placeholder-gray-500 focus:ring-0 sm:text-sm'>토큰 당 금액 (기본 토큰 단위): <%= @smart_contract.purchase_price_friendly %></p>
    <p class='block w-full border-0 p-0 text-gray-900 placeholder-gray-500 focus:ring-0 sm:text-sm'>네트워크: <%= @smart_contract.network %></p>

    <button onclick="fetchSmartContract()" type="submit" data-turbo="false" class="mt-4 group relative w-full flex justify-center py-2 px-4 border border-black text-sm font-medium rounded-md text-black hover:text-white hover:bg-black focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
      <span class="absolute left-0 inset-y-0 flex items-center pl-3">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
          <path stroke-linecap="round" stroke-linejoin="round" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
        </svg>
      </span>
      Deploy Contract
    </button>
  </div>
</div>

<%= render "metamask_js" %>

<script type="text/javascript">
  var provider = new _ethers.providers.Web3Provider(window.ethereum, "any"); // another to try: const provider = new ethers.providers.Web3Provider(window.ethereum);
  provider.send("eth_requestAccounts", []);

  var signer = provider.getSigner();
  var abi = <%= @abi.to_json.html_safe %>;
  var bytes = '<%= @bytes %>'
  var deployedAddress, txHash;

  // note: can add {gasPrice: 85000000000} inside deploy()
  async function deploy() {
    var factory = new ethers.ContractFactory(abi, bytes, signer);
    let contract = await factory.deploy().then(function(tx) {
      console.log(tx);
      deployedAddress = tx.address;
      txhHash = tx.hash;
    });
  }

  var contractDeployed = setInterval(function(){
    if (deployedAddress !== undefined) {
      console.log('deployedAddress exists!');
      clearInterval(contractDeployed);
      setContractAddress(deployedAddress);
    }
  }, 1000);

  function setContractAddress() {
    $.ajax({
      url: '/smart_contracts/<%= @smart_contract.id %>',
      method: 'patch',
      data: { contract_address: deployedAddress },
      success: function(data) {
        window.location.href = '/projects/<%= Project::CURRENT.id %>/edit';
      }
    })
  }
</script>
